#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

export ZPREZTODIR=$HOME/setup/prezto
export ZDOTDIR=$HOME/setup/prezto

# Source Prezto.

if [[ -s "${ZDOTDIR:-$HOME}/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/init.zsh"
fi

# Customize to your needs...

if [ -f ~/.zprofile ]; then source ~/.zprofile; fi

# brew
eval "$(/opt/homebrew/bin/brew shellenv)"

# cdr
if [[ -n $(echo ${^fpath}/chpwd_recent_dirs(N)) && -n $(echo ${^fpath}/cdr(N)) ]]; then
    autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
    add-zsh-hook chpwd chpwd_recent_dirs
    zstyle ':completion:*' recent-dirs-insert both
    zstyle ':chpwd:*' recent-dirs-default true
    zstyle ':chpwd:*' recent-dirs-max 1000
    zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/chpwd-recent-dirs"
fi

# peco
function peco-history-selection() {
    BUFFER=$(history 1 | sort -k1,1nr | perl -ne 'BEGIN { my @lines = (); } s/^\s*\d+\*?\s*//; $in=$_; if (!(grep {$in eq $_} @lines)) { push(@lines, $in); print $in; }' | peco --query "$LBUFFER")
    CURSOR=${#BUFFER}
    zle reset-prompt
}

function peco-get-destination-from-cdr() {
  cdr -l | \
  sed -e 's/^[[:digit:]]*[[:blank:]]*//' | \
  peco --query "$LBUFFER"
}

function peco-cdr() {
  local destination="$(peco-get-destination-from-cdr)"
  if [ -n "$destination" ]; then
    BUFFER="cd $destination"
    zle accept-line
  else
    zle reset-prompt
  fi
}

# ghq
function peco-src () {
  local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}

# git branch with peco
function peco-gswitch() {
  if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" ]; then
    git branch -a --sort=-authordate |
      grep -v -e '->' -e '*' |
      perl -pe 's/^\h+//g' |
      perl -pe 's#^remotes/origin/##' |
      perl -nle 'print if !$c{$_}++' |
      peco |
      xargs git switch
  fi
}

zle -N peco-cdr
bindkey '^F' peco-cdr
zle -N peco-history-selection
bindkey '^R' peco-history-selection
zle -N peco-src
bindkey '^G' peco-src
zle -N peco-gswitch
bindkey '^B' peco-gswitch

fpath=(/usr/local/share/zsh-completions $fpath)

# alias
alias g='git'
alias rem='reminders'
alias todo='rem show todo'

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '~/google-cloud-sdk/path.zsh.inc' ]; then . '~/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '~/google-cloud-sdk/completion.zsh.inc' ]; then . '~/google-cloud-sdk/completion.zsh.inc'; fi

# asdf
. $(brew --prefix asdf)/libexec/asdf.sh

export ASDFINSTALLS=$HOME/.asdf/installs
GOV=$(asdf current golang | awk '{print $2}')
export PATH=$PATH:$ASDFINSTALLS/golang/$GOV/packages/bin
